import socket
from concurrent.futures import ThreadPoolExecutor, as_completed

def scan_port(target_ip, port):
    sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    sock.settimeout(0.5)
    result = sock.connect_ex((target_ip, port))
    sock.close()
    return port if result == 0 else None

def scan_ports(target_ip):
    open_ports = []
    with ThreadPoolExecutor(max_workers=100) as executor:
        futures = {executor.submit(scan_port, target_ip, port): port for port in range(1, 1025)}
        for future in as_completed(futures):
            port = future.result()
            if port is not None:
                open_ports.append(port)
    return open_ports

if __name__ == "__main__":
    target_ip = input("Enter the IP address to scan: ")
    print(f"Scanning {target_ip}...")
    open_ports = scan_ports(target_ip)
    print("Open ports:")
    for port in open_ports:
        print(port)
